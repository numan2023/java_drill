// 自己紹介
// 自己紹介をおこなうプログラムを作成してください。

// 入力される値
// なし

// 期待する出力
// "名前", "言語", "一言"を以下のフォーマットで出力してください。
// name: 名前
// language: 言語
// hitokoto: 一言

// 条件
// ・出力は 3 行でおこなってください
// ・出力の各行は 1000 文字以内で出力してください

public class SelfIntroduction {
    public static void main(String[] args) {
        String name = "山田";
        String language = "Java";
        String hitokoto = "プログラミングが大好き";

        System.out.println("name: " + name);
        System.out.println("language: " + laguange);
        System.out.println("hitokoto: " + hitokoto);
    }
}

// 模範解答 -------------

import java.util.*;

public class Main {

    public static void main(String[] args) {
        System.out.println("name: Kirishima");
        System.out.println("language: Ruby, English");
        System.out.println("hitokoto: がんばります！");
    }
}

/*
1. import java.util.*;
    ・javaの標準ライブラリからutilパッケージの全てのクラスをインポートする。ただしこの特定のプログラムではutilパッケージのどのクラスも使用していません。従って実際にはこの行は不要です。
2. public class Main{...}
    ・Mainという名前のクラスを定義。Javaでは、プログラムの実行可能部分をクラス内に含める必要がある。
3. public static void main(String[] args) {...}
    ・mainメソッドの定義。Javaプログラムは、mainメソッドから実行を開始。String[] argsはコマンドライン引数を受け取るためのパラメータですが、このプログラムでは使用していない。
4. System.out.println("...");
    ・コード3行は、それぞれ異なるメッセージをコンソールに出力する。

Q1. utilパッケージとはなんですか？Java初心者にわかりやすく教えてください。
A1. javaプログラミング言語の標準ライブラリの一部、様々なユーティリティクラスとインターフェースを提供する。コレクションフレームワーク、日付操作、乱数生成、その他多くの便利な機能を含んでいる。
    1. コレクションフレームワーク：リスト、セット、キュー、マップなどのデータ構造が含まれる。これらはデータの格納、操作、取得を容易にするために広く使用されている。例）ArrayList, HashSet, HashMapなど
    2. 日付と時間の操作：DataクラスやCalenderクラスを含み、日付や時間に関する操作を行う。
    3. 乱数生成：Randomクラスは乱数を生成するために使用。ゲーム、シミュレーション、テストデータの生成など多くの場面で役立つ。
    4. ユーティリティクラス：文字列の操作や数値計算などのための便利なメソッドを提供するクラス。例）Arraysクラス：配列を操作する性的メソッドを提供。Collectionsクラスはコレクションに関する操作を提供。

Q2. リスト、セット、キュー、マップなどのデータ構造とはなんですか？
A2. 
    リスト (List):
    順序付けられたコレクションで、重複する要素を持つことができます。リストはインデックスによるアクセスが可能で、要素の挿入や削除を特定の位置で行うことができます。
    例: ArrayList, LinkedList
    具体例: 買い物リストや待ち行列など、順序が重要な場合に使用します。

    セット (Set):
    重複する要素を持たないコレクションです。セットは、要素が一意であることを保証しますが、通常、要素の順序は保証されません。
    例: HashSet, TreeSet
    具体例: ユーザーのユニークなIDセットや、重複のないキーワードのセットなどに使用します。

    キュー (Queue):
    先入れ先出し（FIFO）の原則に基づいて要素を処理するコレクションです。キューは、要素を追加し、取り出す順序が重要なシナリオに使用されます。
    例: LinkedList (キューとしても機能します), PriorityQueue
    具体例: プリンタの印刷キュー、顧客の待ち行列などに使用します。

    マップ (Map):
    キーと値のペアを保持するコレクションです。各キーはユニークであり、それに関連付けられた値を持ちます。マップは、効率的なキーによるデータの検索に使用されます。
    例: HashMap, TreeMap
    具体例: 郵便番号と住所のマッピング、ユーザーIDとユーザープロファイルのマッピングなどに使用します。

    これらのデータ構造は、様々なシナリオでデータを格納、検索、操作するための強力なツールを提供します。例えば、ArrayListは動的配列として機能し、HashSetはユニークな要素の集合を保持し、LinkedListはキューとして利用でき、HashMapはキーに基づいたデータの格納と取得に便利です。それぞれのデータ構造は特定の用途に最適化されており、適切なデータ構造の選択はプログラムのパフォーマンスと効率を大きく向上させることができます。

Q3. コレクションフレームワークとはなんですか？
A3. データを効率的に格納、操作、処理するための一連のクラスとインターフェースの集合。コレクション(=データ構造)をフレームワークが提供する。

Q4. public static void main(String[] args) {...}
A4. Javaプログラムにおいて、public static void main(String[] args)は非常に重要な部分。これはプログラムの「エントリーポイント＝プログラム実行される最初に呼び出されるメソッド」
    1. public：アクセス修飾子。publicとすることで、このメソッドが他のすべてのクラスからアクセス可能であることを意味。Javaのメインメソッドは常にpublicでなければならない。
    2. void：戻り値の型。voidはメソッドが値を返さないことを意味。メインメソッドはプログラム実行完了後終了するので、何も返さない。
    3. main:メソッド名。Javaのメインメソッド名は常にmainでなければならない。
    4. String[] args：パラメータ（引数）。文字列の配列を意味、コマンドライン引数をプログラムに渡すのに使用。つまりプログラム実行時にコマンドラインから入力される情報を受け取ることができる。

Q5. コマンドラインとはなんですか？
A5. PCに対してテキストベースのコマンドを入力して操作するインターフェース(CLI)。キーボード入力で命令を与える。

Q6. System.out.println("name: Kirishima");
A6. コンソールにテキストを出力するための命令。
    1. System：JavaのSystemクラスは、標準入出力やエラー出力など、システムレベルの機能を提供するクラス。
    2. out：Systemクラスのoutフィールドは、標準出力ストリーム（コンソール）を表す。
    3. println：outオブジェクト（標準出力ストリーム）のメソッド。このメソッドを使用して、指定されたテキストをコンソールに出力、改行を加える。
*/